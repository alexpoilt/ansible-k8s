- name: Criando o Sec Group
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: sg giropops
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    - proto: tcp
      from_port: 2379
      to_port: 2380
      cidr_ip: 0.0.0.0/0
      rule_desc: etcd server API
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-apiserver
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API
    - proto: tcp
      from_port: 10251
      to_port: 10251
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-scheduler
    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-controller-manager
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API Read-only
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Services
    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet
    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2
  local_action: 
    module: ec2
    group: "{{ sec_group_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    profile: "{{ profile }}"
    wait: true
    region: "{{ region }}"
    keypair: "{{ keypair }}"
    count_tag:
      Name: "{{ item.name }}"
    exact_count: 1
    instance_tags:
      Name: "{{ item.name }}"
      Node: "{{ item.node }}"
  register: ec2
  with_items:
  - { name: 'Ansible-1', node: 'Master' }
  - { name: 'Ansible-2', node: 'Worker' }
  - { name: 'Ansible-3', node: 'Worker' }
  
- name: Adicionando a instancia ao inventario temp
  when: item.tagged_instances.0.tags.Node == "Master"
  add_host: 
    name: "{{ item.tagged_instances.0.tags.Name }}" 
    ansible_host: "{{ item.tagged_instances.0.public_ip }}"
    groups: giropops-new
    groups: k8s-master
  with_items: "{{ ec2.results }}"

- name: Adicionando a instancia ao inventario temp
  when: item.tagged_instances.0.tags.Node == "Worker"
  add_host: 
    name: "{{ item.tagged_instances.0.tags.Name }}" 
    ansible_host: "{{ item.tagged_instances.0.public_ip }}"
    groups: giropops-new
    groups: k8s-workers
  with_items: "{{ ec2.results }}"

- name: Adicionando o IP publico das instancias master no grupo k8s-master
  when: item.tagged_instances.0.tags.Node == "Master"
  local_action: 
    module: lineinfile
    dest: ./hosts
    regexp: "^{{ item.tagged_instances.0.public_ip }}"
    insertafter: '^\[k8s-master\]'
    line: "{{ item.tagged_instances.0.public_ip }}"
  with_items: "{{ ec2.results }}"
  

- name: Adicionando o IP publico das instancias workers no grupo k8s-worker
  when: item.tagged_instances.0.tags.Node == "Worker"
  local_action: 
    module: lineinfile
    dest: ./hosts
    regexp: "^{{ item.tagged_instances.0.public_ip }}"
    insertafter: '^\[k8s-workers\]'
    line: "{{ item.tagged_instances.0.public_ip }}"
  with_items: "{{ ec2.results }}"
  

- name: Adicionando variavel K8S_MASTER_NODE_IP= ao arquivo hosts
  when: item.tagged_instances.0.tags.Node == "Master"
  local_action: 
    module: lineinfile
    dest: ./hosts
    regexp: '^K8S_MASTER_NODE_IP='
    line: K8S_MASTER_NODE_IP={{ item.tagged_instances.0.private_ip }}
  with_items: "{{ ec2.results }}"
  
- name: Esperando o SSH
  local_action: wait_for
    host={{ item.tagged_instances.0.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.results }}"
